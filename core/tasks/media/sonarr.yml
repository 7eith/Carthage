---
- name: Sonarr @ Initalize
  community.docker.docker_container:
    name: sonarr
    image: lscr.io/linuxserver/sonarr
    pull: true
    state: started
    restart_policy: unless-stopped
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: "{{ timezone }}"
      DOCKER_MODS: ghcr.io/gilbn/theme.park:sonarr
    volumes:
      - "{{ docker_dir }}/sonarr/config:/config"
      - "{{ data_dir }}:/data"
    networks:
      - name: carthage
    labels:
      traefik.enable: "true"
      traefik.http.routers.sonarr.entrypoints: "http"
      traefik.http.routers.sonarr.rule: "Host(`sonarr.{{ domain }}`)"
      traefik.http.middlewares.sonarr-https-redirect.redirectscheme.scheme: "https"
      traefik.http.routers.sonarr.middlewares: "sonarr-https-redirect"
      traefik.http.routers.sonarr-secure.entrypoints: "https"
      traefik.http.routers.sonarr-secure.rule: "Host(`sonarr.{{ domain }}`)"
      traefik.http.routers.sonarr-secure.tls: "true"
      traefik.http.routers.sonarr-secure.service: "sonarr"
      # traefik.http.routers.sonarr-secure.middlewares: "authelia@docker"
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
      traefik.docker.network: "carthage"